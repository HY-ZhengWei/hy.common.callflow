<?xml version="1.0" encoding="UTF-8"?>

<config>

    <import name="xconfig"    class="java.util.ArrayList" />
    <import name="xmt"        class="org.hy.common.callflow.nesting.MTConfig" />
    <import name="xnesting"   class="org.hy.common.callflow.nesting.NestingConfig" />
    <import name="xfor"       class="org.hy.common.callflow.forloop.ForConfig" />
    <import name="xnode"      class="org.hy.common.callflow.node.NodeConfig" />
    <import name="xwait"      class="org.hy.common.callflow.node.WaitConfig" />
    <import name="xcalculate" class="org.hy.common.callflow.node.CalculateConfig" />
    <import name="xcondition" class="org.hy.common.callflow.ifelse.ConditionConfig" />
    <import name="xreturn"    class="org.hy.common.callflow.returns.ReturnConfig" />
    <import name="xapi"       class="org.hy.common.callflow.node.APIConfig" />
    <import name="xpublish"   class="org.hy.common.callflow.event.PublishConfig" />
    <import name="xsubscribe" class="org.hy.common.callflow.event.SubscribeConfig" />
    <import name="xwspush"    class="org.hy.common.callflow.event.WSPushConfig" />
    <import name="xsql"       class="org.hy.common.callflow.node.XSQLConfig" />
    <import name="xjob"       class="org.hy.common.callflow.event.JOBConfig" />
    
    
    
    <!-- CFlow编排引擎配置 -->
    <xconfig>
    
        <xnode id="XNode_CF012_1_1_2">
            <comment>完成</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_Finish</callMethod>          <!-- 定义执行方法 -->
            <callParam>
                <valueClass>java.util.Map</valueClass>      <!-- 定义入参类型。占位符变量时，可免定义 -->
                <value>:CallFlowContext</value>             <!-- 系统预设的上下文内容变量名称 -->
            </callParam>
        </xnode>
    
        
        <xnode id="XNode_CF012_1_1_1">
            <comment>模拟循环体内执行的方法2</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_For2</callMethod>            <!-- 定义执行方法 -->
            <callParam>
                <valueClass>java.lang.Object</valueClass>   <!-- 定义入参类型 -->
                <value>:ForElement</value>                  <!-- 定义入参变量名称 -->
            </callParam>
            <route>
                <succeed>                                   <!-- For循环结束点（再次循环点） -->
                    <next>:XFor_CF012_1</next>
                    <comment>循环的下一步</comment>
                </succeed>
                <succeed>                                   <!-- 成功时，关联后置节点 -->
                    <next ref="XNode_CF012_1_1_2" />
                    <comment>退出循环后的节点</comment>
                </succeed>
            </route>
        </xnode>
        
        
        <xnode id="XNode_CF012_1_1">
            <comment>模拟循环体内执行的方法1</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_For1</callMethod>            <!-- 定义执行方法 -->
            <callParam>
                <valueClass>java.lang.Integer</valueClass>  <!-- 定义入参类型 -->
                <value>:ForIndex</value>                    <!-- 定义入参变量名称 -->
            </callParam>
            <route>
                <succeed>                                   <!-- 成功时，关联后置节点 -->
                    <next ref="XNode_CF012_1_1_1" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xnode>
        
        
        <xfor id="XFor_CF012_1">
            <comment>循环：List集合</comment>
            <end>:Datas</end>                               <!-- 集合对象的变量名称 -->
            <indexID>ForIndex</indexID>                     <!-- 序号变量名称（可选的） -->
            <elementID>ForElement</elementID>               <!-- 每次循环元素的变量名称（可选的） -->
            <route>
                <succeed>                                   <!-- 成功时，关联后置节点 -->
                    <next ref="XNode_CF012_1_1" />
                    <comment>For循环</comment>
                </succeed>
            </route>
        </xfor>
        
    </xconfig>
    
</config>