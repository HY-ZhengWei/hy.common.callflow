<?xml version="1.0" encoding="UTF-8"?>

<config>

    <import name="xconfig"    class="java.util.ArrayList" />
    <import name="xmt"        class="org.hy.common.callflow.nesting.MTConfig" />
    <import name="xnesting"   class="org.hy.common.callflow.nesting.NestingConfig" />
    <import name="xfor"       class="org.hy.common.callflow.forloop.ForConfig" />
    <import name="xcondition" class="org.hy.common.callflow.ifelse.ConditionConfig" />
    <import name="xreturn"    class="org.hy.common.callflow.returns.ReturnConfig" />
    <import name="xcg"        class="org.hy.common.callflow.cache.CacheGetConfig" />
    <import name="xcs"        class="org.hy.common.callflow.cache.CacheSetConfig" />
    <import name="xcalculate" class="org.hy.common.callflow.node.CalculateConfig" />
    <import name="xwait"      class="org.hy.common.callflow.node.WaitConfig" />
    <import name="xnode"      class="org.hy.common.callflow.node.NodeConfig" />
    <import name="xapi"       class="org.hy.common.callflow.node.APIConfig" />
    <import name="xsql"       class="org.hy.common.callflow.node.XSQLConfig" />
    <import name="xzip"       class="org.hy.common.callflow.node.ZipConfig" />
    <import name="xunzip"     class="org.hy.common.callflow.node.UnzipConfig" />
    <import name="xcommand"   class="org.hy.common.callflow.node.CommandConfig" />
    <import name="xpython"    class="org.hy.common.callflow.language.PythonConfig" />
    <import name="xgroovy"    class="org.hy.common.callflow.language.GroovyConfig" />
    <import name="xshell"     class="org.hy.common.callflow.language.ShellConfig" />
    <import name="xenf"       class="org.hy.common.callflow.safe.EncryptFileConfig" />
    <import name="xdef"       class="org.hy.common.callflow.safe.DecryptFileConfig" />
    <import name="xpublish"   class="org.hy.common.callflow.event.PublishConfig" />
    <import name="xsubscribe" class="org.hy.common.callflow.event.SubscribeConfig" />
    <import name="xwspush"    class="org.hy.common.callflow.event.WSPushConfig" />
    <import name="xwspull"    class="org.hy.common.callflow.event.WSPullConfig" />
    <import name="xjob"       class="org.hy.common.callflow.event.JOBConfig" />
    
    
    
    <!-- CFlow编排引擎配置 -->
    <xconfig>
    
        <xnode id="XNode_Show">
            <comment>显示信息</comment>
            <callXID>:XProgram</callXID>
            <callMethod>method_Show</callMethod>
            <callParam>
                <value>:RetTables</value>
            </callParam>
            <callParam>
                <value>:RetDatas</value>
            </callParam>
            <callParam>
                <value>:RetRow</value>
            </callParam>
            <callParam>
                <value>:RetRowObject</value>
            </callParam>
        </xnode>
        
        
        <xcg id="XCG_Query_RowObject">
            <comment>行数据反序列化为Java实例</comment>
            <cacheXID>:RedisOperation_MS_Common</cacheXID> <!-- 缓存实例的XID -->
            <dataBase>msOpenApis</dataBase>                <!-- 数据库名称 -->
            <table>TAppConfig</table>                      <!-- 表名称 -->
            <pkID>App_IOT</pkID>                           <!-- 主键ID名称 -->
            <rowClass>org.hy.common.callflow.junit.cflow028.program.AppConfig</rowClass>  <!-- 行类型 -->
            <returnID>RetRowObject</returnID>              <!-- 定义返回结果的变量名称 -->
            <route>
                <succeed>
                    <next ref="XNode_Show" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xcg>
        
    
        <xcg id="XCG_Query_Row">
            <comment>有库、表、主键ID时，查一行数据</comment>
            <cacheXID>:RedisOperation_MS_Common</cacheXID> <!-- 缓存实例的XID -->
            <dataBase>msOpenApis</dataBase>                <!-- 数据库名称 -->
            <table>TAppConfig</table>                      <!-- 表名称 -->
            <pkID>App_IOT</pkID>                           <!-- 主键ID名称 -->
            <returnID>RetRow</returnID>                    <!-- 定义返回结果的变量名称 -->
            <route>
                <succeed>
                    <next ref="XCG_Query_RowObject" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xcg>
    
    
        <xcg id="XCG_Query_AllDatas">
            <comment>仅有库、表名称时，查表中所有行数据</comment>
            <cacheXID>:RedisOperation_MS_Common</cacheXID> <!-- 缓存实例的XID -->
            <dataBase>msOpenApis</dataBase>                <!-- 数据库名称 -->
            <table>TAppConfig</table>                      <!-- 表名称 -->
            <returnID>RetDatas</returnID>                  <!-- 定义返回结果的变量名称 -->
            <route>
                <succeed>
                    <next ref="XCG_Query_Row" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xcg>
        
    
        <xcg id="XCG_Query_AllTables">
            <comment>仅有库名称时，查库中所有表信息</comment>
            <cacheXID>:RedisOperation_MS_Common</cacheXID> <!-- 缓存实例的XID -->
            <dataBase>msOpenApis</dataBase>                <!-- 数据库名称 -->
            <returnID>RetTables</returnID>                 <!-- 定义返回结果的变量名称 -->
            <route>
                <succeed>
                    <next ref="XCG_Query_AllDatas" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xcg>
        
    </xconfig>
    
</config>