<?xml version="1.0" encoding="UTF-8"?>

<config>

    <import name="xconfig"    class="java.util.ArrayList" />
    <import name="xmt"        class="org.hy.common.callflow.nesting.MTConfig" />
    <import name="xnesting"   class="org.hy.common.callflow.nesting.NestingConfig" />
    <import name="xfor"       class="org.hy.common.callflow.forloop.ForConfig" />
    <import name="xcondition" class="org.hy.common.callflow.ifelse.ConditionConfig" />
    <import name="xreturn"    class="org.hy.common.callflow.returns.ReturnConfig" />
    <import name="xcg"        class="org.hy.common.callflow.cache.CacheGetConfig" />
    <import name="xcs"        class="org.hy.common.callflow.cache.CacheSetConfig" />
    <import name="xcalculate" class="org.hy.common.callflow.node.CalculateConfig" />
    <import name="xwait"      class="org.hy.common.callflow.node.WaitConfig" />
    <import name="xnode"      class="org.hy.common.callflow.node.NodeConfig" />
    <import name="xapi"       class="org.hy.common.callflow.node.APIConfig" />
    <import name="xsql"       class="org.hy.common.callflow.node.XSQLConfig" />
    <import name="xzip"       class="org.hy.common.callflow.node.ZipConfig" />
    <import name="xunzip"     class="org.hy.common.callflow.node.UnzipConfig" />
    <import name="xcommand"   class="org.hy.common.callflow.node.CommandConfig" />
    <import name="xpython"    class="org.hy.common.callflow.language.PythonConfig" />
    <import name="xgroovy"    class="org.hy.common.callflow.language.GroovyConfig" />
    <import name="xenf"       class="org.hy.common.callflow.safe.EncryptFileConfig" />
    <import name="xdef"       class="org.hy.common.callflow.safe.DecryptFileConfig" />
    <import name="xpublish"   class="org.hy.common.callflow.event.PublishConfig" />
    <import name="xsubscribe" class="org.hy.common.callflow.event.SubscribeConfig" />
    <import name="xwspush"    class="org.hy.common.callflow.event.WSPushConfig" />
    <import name="xwspull"    class="org.hy.common.callflow.event.WSPullConfig" />
    <import name="xjob"       class="org.hy.common.callflow.event.JOBConfig" />
    
    
    
    <!-- CFlow编排引擎配置 -->
    <xconfig>
    
        <xnode id="XNode_CF013_1_2_1">
            <comment>异常路由后的成功路由后的子元素的执行</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_Error_Finish</callMethod>    <!-- 定义执行方法 -->
        </xnode>
        
        
        <xnode id="XNode_CF013_1_2">
            <comment>超时异常情况</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_Error</callMethod>           <!-- 定义执行方法 -->
            <route>
                <succeed>                                   <!-- 成功时，关联后置节点 -->
                    <next ref="XNode_CF013_1_2_1" />
                    <comment>成功时</comment>
                </succeed>
            </route>
        </xnode>
    
        
        <xnode id="XNode_CF013_1_1">
            <comment>正常情况</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_OK</callMethod>              <!-- 定义执行方法 -->
            <callParam>
                <valueClass>java.lang.Long</valueClass>     <!-- 定义入参类型 -->
                <value>:TimeLen</value>                     <!-- 定义入参变量名称 -->
            </callParam>
        </xnode>
        
        
        <xnode id="XNode_CF013_1">
            <comment>模拟超时</comment>
            <callXID>:XProgram</callXID>                    <!-- 定义执行对象 -->
            <callMethod>method_Timeout</callMethod>         <!-- 定义执行方法 -->
            <timeout>5000</timeout>                         <!-- 执行超时时长（单位：毫秒） -->
            <callParam>
                <valueClass>java.lang.Long</valueClass>     <!-- 定义入参类型 -->
                <value>:SleepTime</value>                   <!-- 定义入参变量名称 -->
            </callParam>
            <returnID>TimeLen</returnID>                    <!-- 定义返回结果的变量名称 -->
            <route>
                <succeed>                                   <!-- 成功时，关联后置节点 -->
                    <next ref="XNode_CF013_1_1" />
                    <comment>成功时</comment>
                </succeed>
                <error>                                     <!-- 异常时，关联后置节点 -->
                    <next ref="XNode_CF013_1_2" />
                    <comment>超时异常时</comment>
                </error>
            </route>
        </xnode>
        
    </xconfig>
    
</config>